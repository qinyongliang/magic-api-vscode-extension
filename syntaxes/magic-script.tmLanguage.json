{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Magic Script",
  "scopeName": "source.magic-script",
  "fileTypes": ["ms", "magic"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#dbSqlTemplate" },
    { "include": "#strings" },
    { "include": "#templateStrings" },
    { "include": "#numbers" },
    { "include": "#keywords" },
    { "include": "#operators" },
    { "include": "#importAlias" },
    { "include": "#languageBlock" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.magic-script",
          "match": "//.*$"
        },
        {
          "name": "comment.block.magic-script",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "dbSqlTemplate": {
      "patterns": [
        {
          "name": "meta.sql.in.db.magic-script",
          "begin": "\\b(db(?:\\.[A-Za-z_][A-Za-z0-9_]*)*)\\s*\\(\\s*\"\"\"",
          "beginCaptures": {
            "1": { "name": "support.function.db.magic-script" }
          },
          "end": "\"\"\"",
          "patterns": [
            { "include": "source.sql" }
          ]
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.triple.double.magic-script",
          "begin": "\"\"\"",
          "end": "\"\"\"",
          "patterns": [
            { "include": "#stringEscapes" }
          ]
        },
        {
          "name": "string.quoted.double.magic-script",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            { "include": "#stringEscapes" }
          ]
        },
        {
          "name": "string.quoted.single.magic-script",
          "begin": "'",
          "end": "'",
          "patterns": [
            { "include": "#stringEscapes" }
          ]
        },
        {
          "name": "string.regexp.magic-script",
          "begin": "/",
          "end": "/[gimsuy]*",
          "patterns": [
            { "name": "constant.character.escape.magic-script", "match": "\\/" }
          ]
        }
      ]
    },
    "templateStrings": {
      "patterns": [
        {
          "name": "string.template.magic-script",
          "begin": "`",
          "end": "`",
          "patterns": [
            { "name": "constant.character.escape.magic-script", "match": "\\\\[btnrfe0'\"\\\\]" },
            {
              "name": "meta.embedded.magic-script",
              "begin": "\\$\\{",
              "end": "\\}",
              "patterns": [
                { "include": "source.magic-script" }
              ]
            }
          ]
        }
      ]
    },
    "stringEscapes": {
      "patterns": [
        { "name": "constant.character.escape.magic-script", "match": "\\\\[btnrfe0'\"\\]" },
        { "name": "constant.character.escape.unicode.magic-script", "match": "\\\\u[0-9A-Fa-f]{4}" }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.magic-script",
          "match": "(?x)\n             (?:\n               0x[0-9A-Fa-f_]+ |            # hex with underscores\n               0b[01_]+ |                   # binary with underscores\n               \\d[0-9_]*(?:\\.[0-9_]+)?  # decimal/float with underscores\n             )\n             (?:[bBsSlLfFdDmM])?             # type suffix\n          "
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.magic-script",
          "match": "\\b(import|as|var|let|const|return|break|continue|if|for|in|new|true|false|null|else|try|catch|finally|async|while|exit|and|or|throw|from|join|left|group|by|having|where|on|limit|offset|instanceof)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        { "name": "keyword.operator.logical.magic-script", "match": "\\|\\||&&|!" },
        { "name": "keyword.operator.comparison.magic-script", "match": "===|!==|==|!=|<=|>=|<|>" },
        { "name": "keyword.operator.assignment.magic-script", "match": "=|\\+=|-=|\\*=|/=|%=|<<=|>>=|>>>?=|\\^=|&=|\\|=" },
        { "name": "keyword.operator.bitwise.magic-script", "match": "<<|>>>|>>|\\^|~|&|\\|" },
        { "name": "keyword.operator.other.magic-script", "match": "\\?\\.|::|\\.\\.\\.|=>|->|\\?" }
      ]
    },
    "importAlias": {
      "patterns": [
        {
          "name": "meta.import.magic-script",
          "begin": "\\bimport\\b",
          "end": "$",
          "patterns": [
            { "name": "keyword.control.magic-script", "match": "\\bimport\\b" },
            { "name": "keyword.control.magic-script", "match": "\\bas\\b" },
            { "name": "string.quoted.single.magic-script", "begin": "'", "end": "'" },
            { "name": "string.quoted.double.magic-script", "begin": "\"", "end": "\"" },
            { "name": "entity.name.variable.magic-script", "match": "[A-Za-z_][A-Za-z0-9_]*" }
          ]
        }
      ]
    },
    "languageBlock": {
      "patterns": [
        {
          "name": "meta.embedded.block.magic-script",
          "begin": "```([A-Za-z_][A-Za-z0-9_]*)",
          "beginCaptures": {
            "1": { "name": "entity.name.language.magic-script" }
          },
          "end": "```",
          "patterns": [
            { "name": "string.unquoted.block.magic-script", "match": ".+" }
          ]
        }
      ]
    }
  }
}